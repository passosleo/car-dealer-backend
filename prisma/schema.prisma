// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId                     String                       @id @default(uuid()) @map("user_id")
  firstName                  String                       @map("first_name")
  lastName                   String                       @map("last_name")
  email                      String                       @unique
  password                   String
  passwordChangedAt          DateTime?                    @map("password_changed_at") @db.Timestamp(0)
  createdAt                  DateTime                     @default(now()) @map("created_at") @db.Timestamp(0)
  createdBy                  String                       @map("created_by")
  updatedAt                  DateTime?                    @updatedAt() @map("updated_at") @db.Timestamp(0)
  updatedBy                  String?                      @map("updated_by")
  active                     Boolean                      @default(true)
  UserPasswordRecoverAttempt UserPasswordRecoverAttempt[]

  @@map("tb_users")
}

model UserPasswordRecoverAttempt {
  attemptId     String    @id @default(uuid()) @map("attempt_id")
  userId        String    @unique @map("user_id")
  user          User      @relation(fields: [userId], references: [userId])
  attemptCount  Int       @default(1) @map("attempt_count")
  lastAttemptAt DateTime  @map("last_attempt_at") @db.Timestamp(0)
  blockedUntil  DateTime? @map("blocked_until") @db.Timestamp(0)
  createdAt     DateTime  @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt     DateTime? @updatedAt() @map("updated_at") @db.Timestamp(0)

  @@map("tb_users_password_recover_attempts")
}
