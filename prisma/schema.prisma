// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId                   String                     @id @default(uuid()) @map("user_id")
  firstName                String                     @map("first_name")
  lastName                 String                     @map("last_name")
  email                    String                     @unique
  password                 String
  passwordChangedAt        DateTime?                  @map("password_changed_at")
  createdAt                DateTime                   @default(now()) @map("created_at")
  createdBy                String                     @map("created_by")
  updatedAt                DateTime?                  @updatedAt() @map("updated_at")
  updatedBy                String?                    @map("updated_by")
  active                   Boolean                    @default(true)
  UserPasswordResetAttempt UserPasswordResetAttempt[]

  @@map("tb_users")
}

model UserPasswordResetAttempt {
  attemptId       String    @id @default(uuid()) @map("attempt_id")
  userId          String    @map("user_id")
  user            User      @relation(fields: [userId], references: [userId])
  attempt_count   Int       @default(0) @map("attempt_count")
  last_attempt_at DateTime  @map("last_attempt_at")
  blocked_until   DateTime? @map("blocked_until")
  createdAt       DateTime  @default(now()) @map("created_at")
  updatedAt       DateTime? @updatedAt() @map("updated_at")

  @@map("tb_users_password_reset_attempts")
}
