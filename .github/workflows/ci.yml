name: CI/CD - Car Dealer Backend

on:
  push:
    branches:
      - main

jobs:

  # 1️⃣ Validações estáticas: TypeScript + Lint
  static-checks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Type Check
        run: yarn ts:check

      - name: Lint
        run: yarn lint

  # 2️⃣ Build da aplicação
  build:
    runs-on: ubuntu-latest
    needs: static-checks
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build
        run: yarn build

  # 3️⃣ Testes unitários
  unit-tests:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run Unit Tests
        run: yarn test

  # 4️⃣ Scan de segredos com Gitleaks
  secrets-scan:
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2

  # 5️⃣ Auditoria de dependências com Yarn Audit
  dependency-audit:
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run Yarn Audit
        run: yarn audit --groups dependencies --level high

  # 6️⃣ Build e Push da imagem Docker (após todas as validações)
  docker-image:
    runs-on: ubuntu-latest
    needs: [secrets-scan, dependency-audit]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker Build & Push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: leopassos/car-dealer-backend:latest
